-- +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++---- AutoAutolaner Codec and Remote Map-- by Catblack@gmail.com---- Donationware via paypal-- -- +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-- Itemnum is the array set in remote_init for knowing what the item number is-- when we need it for remote.handle_inputItemnum={}do_send_msg = 0LastSysexPos=0LastPos=0Pos=0Right=0Left=0TTEM=0Rec=0--+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-- error(tblprint(tbl)) contents of `tbl`, with indentation.-- `indent` sets the initial level of indentation.-- https://gist.github.com/ripter/4270799function tblprint (tbl, indent)	local output = ''	if not indent then indent = 0 end	if type(tbl) == "table" then		 for k, v in pairs(tbl) do			formatting = string.rep("  ", indent) .. k .. ": "			if type(v) == "table" then				output = output..'\n'..formatting ..'\n'..				tblprint(v, indent+1)			elseif type(v) == 'boolean' then				output=output..formatting .. tostring(v)					else				output=output..formatting .. tostring(v) ..'\n'			end		 end--[[	else		formatting = string.rep("  ", indent) .. type(tbl) .. ": "		remote.trace(formatting .. tostring(v) ..'\n')--]]	end		return outputend-- +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-- +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++function remote_init(manufacturer, model)-- +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-- +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-- this version--	if model=="AutoAutolaner" then		local items={	{name="LanerDisable", input="button", output="nooutput", min=0, max=1, itemnum="LanerDisable"},	{name="AltOrDub", input="button", output="nooutput", min=0, max=1, itemnum="AltOrDub"},	{name="--ignore_below--", input="button", output="nooutput", min=0, max=1},	{name="NewAltTake", input="button", output="nooutput", min=0, max=1, itemnum="NewAltTake"},	{name="NewOverdub", input="button", output="nooutput", min=0, max=1, itemnum="NewOverdub"},	{name="Pos", input="noinput", output="value", min=0, max=2147483646, itemnum="Pos"},	{name="Rec", input="noinput", output="value", min=0, max=1, itemnum="Rec"},	{name="Loop", input="noinput", output="value", min=0, max=1, itemnum="Loop"},	{name="LeftLoop", input="noinput", output="value", min=0, max=2147483646, itemnum="Left"},	{name="RightLoop", input="noinput", output="value", min=0, max=2147483646, itemnum="Right"},	{name="TTEM", input="noinput", output="value", min=0, max=1, itemnum="TTEM"}			}-- some items need to be noted, so here's where Itemnum.thing is setfor it=1,table.getn(items),1 do	if items[it].itemnum ~= nil then		Itemnum[items[it].itemnum]=it	endend		remote.define_items(items)local inputs={}	remote.define_auto_inputs(inputs)  local outputs={ }	remote.define_auto_outputs(outputs)--endend-- +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-- +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++function remote_process_midi(event)	if do_send_msg == 1 then		if event.size==8 then		local trigger = remote.match_midi("F0 00 01 02 xx yy zz F7",event) --			if (trigger.x==3) and (trigger.y==4) and (trigger.z==5) then		TTEM = remote.is_item_enabled(Itemnum.TTEM) and remote.get_item_value(Itemnum.TTEM) or 0	if TTEM == 0 thenRec = remote.is_item_enabled(Itemnum.Rec) and remote.get_item_value(Itemnum.Rec) or 0		if Rec == 1 thenLoop = remote.is_item_enabled(Itemnum.Loop) and remote.get_item_value(Itemnum.Loop) or 0			if Loop == 1 then																		LastPos = remote.is_item_enabled(Itemnum.Pos) and remote.get_item_value(Itemnum.Pos) or Posif (((LastSysexPos+480) > LastPos) or ((LastSysexPos-480) < LastPos)) then				local msg={ time_stamp = event.time_stamp, item = Itemnum.NewAltTake, value = 1}				remote.handle_input(msg)				do_send_msg = 0--error(Itemnum.NewAltTake .. " " .. tblprint(event).. " " ..tblprint(trigger).. " " .. Left .. " " .. Right .. " " .. Pos .. " " .. Loop .. " " .. Rec .. " " .. TTEM)				return true -- absorb the incoming eventend			end -- Loop		end -- Rec	end -- TTEM				end  -- trigger		end --event.size==8	end -- do_send_msg == 1			return true -- absorb the incoming eventend --RPM-- +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-- +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-- +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-- +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-- +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-- +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++function remote_deliver_midi(maxbytes,port)-- +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-- +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++	local AAL_events={}if do_send_msg == 0 thenTTEM = remote.is_item_enabled(Itemnum.TTEM) and remote.get_item_value(Itemnum.TTEM) or 0	if TTEM == 0 thenRec = remote.is_item_enabled(Itemnum.Rec) and remote.get_item_value(Itemnum.Rec) or 0		if Rec == 1 thenLoop = remote.is_item_enabled(Itemnum.Loop) and remote.get_item_value(Itemnum.Loop) or 0			if Loop == 1 then		Left = remote.is_item_enabled(Itemnum.Left) and remote.get_item_value(Itemnum.Left) or LeftRight = remote.is_item_enabled(Itemnum.Right) and remote.get_item_value(Itemnum.Right) or RightPos = remote.is_item_enabled(Itemnum.Pos) and remote.get_item_value(Itemnum.Pos) or Pos--[[if (Pos > (Right-960)) then A=true else A=false endif (Pos < (Left+960)) then B=true else B=false end		first_bool = false		second_bool = falseif Pos >= (Right-960) and second_bool==false then	first_bool = trueelseif Pos <= (Left+960) and first_bool==true then	second_bool = true	if first_bool==true and second_bool==true then		-- trigger					do_send_msg = 1					local AAL_event = remote.make_midi("F0 00 01 02 03 04 05 F7") 					table.insert(AAL_events,AAL_event)		first_bool = false		second_bool = false	endend--]]				if (Pos >=(Right-960)) or ((LastSysexPos > Pos) and (Pos < (Left+960)))  then--				if (Pos >=(Right-960))  then					do_send_msg = 1					LastSysexPos=Pos					local AAL_event = remote.make_midi("F0 00 01 02 03 04 05 F7") 					table.insert(AAL_events,AAL_event)				else--					do_send_msg = 0				end--[[--]]			end -- Loop		end -- Rec	end -- TTEMend -- do_send_msg = 0		return AAL_eventsend -- RDM-- -- +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-- +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-- +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-- +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-- Caution, RSS fires off before RPM and RDMfunction remote_set_state(changed_items)--[[if do_send_msg == 0 thenTTEM = remote.is_item_enabled(Itemnum.TTEM) and remote.get_item_value(Itemnum.TTEM) or 0	if TTEM == 0 thenRec = remote.is_item_enabled(Itemnum.Rec) and remote.get_item_value(Itemnum.Rec) or 0		if Rec == 1 thenLoop = remote.is_item_enabled(Itemnum.Loop) and remote.get_item_value(Itemnum.Loop) or 0			if Loop == 1 then		Left = remote.is_item_enabled(Itemnum.Left) and remote.get_item_value(Itemnum.Left) or LeftRight = remote.is_item_enabled(Itemnum.Right) and remote.get_item_value(Itemnum.Right) or RightLastPos=PosPos = remote.is_item_enabled(Itemnum.Pos) and remote.get_item_value(Itemnum.Pos) or 0								if (Pos >=(Right-960)) or (LastPos > Pos)   then					do_send_msg = 1				else--					do_send_msg = 0				end			end -- Loop		end -- Rec	end -- TTEMend -- do_send_msg = 0--error(changed_items)--]]end-- +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-- +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++function remote_probe()	return {	}end-- +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++